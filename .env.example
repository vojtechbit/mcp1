# Google OAuth credentials
GOOGLE_CLIENT_ID=your-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-client-secret

# OAuth Callback URL (for ChatGPT Custom GPT OAuth flow)
# Development:
REDIRECT_URI=http://localhost:3000/oauth/callback
# Production (update to your Render URL):
# REDIRECT_URI=https://mcp1-oauth-server.onrender.com/oauth/callback

# Encryption key (generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))")
ENCRYPTION_KEY=your-64-character-hex-encryption-key

# Proxy token signing secret (used to hash ChatGPT access tokens)
PROXY_TOKEN_SECRET=your-64-character-hex-proxy-secret
# Optional comma-separated list of previous secrets for rotation
# PROXY_TOKEN_ADDITIONAL_SECRETS=old-secret-1,old-secret-2

# MongoDB Atlas connection string
MONGODB_URI=mongodb+srv://username:password@cluster.xxxxx.mongodb.net/oauth_db?retryWrites=true&w=majority

# OAuth Client Credentials (for ChatGPT Custom GPT)
# Generate a secure secret: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
OAUTH_CLIENT_ID=mcp1-oauth-client
OAUTH_CLIENT_SECRET=your-secure-oauth-secret-here

# Server settings
PORT=3000
NODE_ENV=development
BASE_URL=http://localhost:3000
# Production: BASE_URL=https://mcp1-oauth-server.onrender.com

# Background Token Refresh
# Default: enabled so Render keeps tokens fresh while the server is online
# Set to 'false' to disable the periodic refresh loop
ENABLE_BACKGROUND_REFRESH=true

# Optional refresh tuning
# TOKEN_REFRESH_CONCURRENCY=3
# STARTUP_REFRESH_THRESHOLD_MS=3600000
# BACKGROUND_REFRESH_THRESHOLD_MS=7200000

# Logging controls
# Set to true only when debugging locally (payloads are sanitized)
OAUTH_REQUEST_LOGGING=false
