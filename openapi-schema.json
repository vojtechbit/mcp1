{
  "openapi": "3.1.0",
  "info": {
    "title": "Gmail & Calendar Assistant API",
    "description": "OAuth proxy API for Custom GPT",
    "version": "1.0.0"
  },
  "servers": [
    { "url": "https://mcp1-oauth-server.onrender.com", "description": "Primary API server" }
  ],
  "paths": {
    "/api/auth/status": {
      "get": {
        "operationId": "getAuthStatus",
        "summary": "Check authentication status",
        "responses": {
          "200": { "description": "Auth status", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthStatus" } } } }
        }
      }
    },

    "/api/gmail/send": {
      "post": {
        "operationId": "sendEmail",
        "summary": "Send email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailRequest"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Email sent", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EmailSendResponse" } } } }
        }
      }
    },

    "/api/gmail/draft": {
      "post": {
        "operationId": "createDraft",
        "summary": "Create email draft",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SendEmailRequest" }
            }
          }
        },
        "responses": {
          "200": { "description": "Draft created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DraftResponse" } } } }
        }
      }
    },

    "/api/gmail/search": {
      "get": {
        "operationId": "searchEmails",
        "summary": "Search emails",
        "parameters": [
          { "name": "query", "in": "query", "required": true, "schema": { "type": "string" } },
          { "name": "maxResults", "in": "query", "schema": { "type": "integer", "default": 10 } },
          { "name": "pageToken", "in": "query", "schema": { "type": "string", "description": "Gmail API page token" } }
        ],
        "responses": {
          "200": { "description": "Search results", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/SearchEmailsResponse" } } } }
        }
      }
    },

    "/api/gmail/read/{messageId}": {
      "get": {
        "operationId": "readEmail",
        "summary": "Read email",
        "parameters": [
          { "name": "messageId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Email data", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EmailData" } } } }
        }
      }
    },

    "/api/gmail/reply/{messageId}": {
      "post": {
        "operationId": "replyToEmail",
        "summary": "Reply to email",
        "parameters": [
          { "name": "messageId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ReplyRequest" }
            }
          }
        },
        "responses": {
          "200": { "description": "Reply sent", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ReplyResponse" } } } }
        }
      }
    },

    "/api/gmail/{messageId}": {
      "delete": {
        "operationId": "deleteEmail",
        "summary": "Delete (trash) email",
        "parameters": [
          { "name": "messageId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Email deleted", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DeleteEmailResponse" } } } }
        }
      }
    },

    "/api/calendar/events": {
      "post": {
        "operationId": "createEvent",
        "summary": "Create calendar event",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EventCreateRequest" }
            }
          }
        },
        "responses": {
          "200": { "description": "Event created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EventCreateResponse" } } } }
        }
      },
      "get": {
        "operationId": "listEvents",
        "summary": "List events",
        "parameters": [
          { "name": "timeMin", "in": "query", "schema": { "type": "string", "description": "ISO 8601 datetime" } },
          { "name": "timeMax", "in": "query", "schema": { "type": "string", "description": "ISO 8601 datetime" } },
          { "name": "pageToken", "in": "query", "schema": { "type": "string", "description": "Google Calendar API page token" } }
        ],
        "responses": {
          "200": { "description": "Events list", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EventListResponse" } } } }
        }
      }
    },

    "/api/calendar/events/{eventId}": {
      "get": {
        "operationId": "getEvent",
        "summary": "Get calendar event",
        "parameters": [
          { "name": "eventId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Event detail", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Event" } } } }
        }
      },
      "patch": {
        "operationId": "updateEvent",
        "summary": "Update calendar event",
        "parameters": [
          { "name": "eventId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/EventUpdateRequest" }
            }
          }
        },
        "responses": {
          "200": { "description": "Event updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EventUpdateResponse" } } } }
        }
      },
      "delete": {
        "operationId": "deleteEvent",
        "summary": "Delete event",
        "parameters": [
          { "name": "eventId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Event deleted", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/EventDeleteResponse" } } } }
        }
      }
    },

    "/api/contacts/search": {
      "get": {
        "operationId": "searchContacts",
        "summary": "Search contacts",
        "parameters": [
          { "name": "query", "in": "query", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Contacts search results", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ContactsListResponse" } } } }
        }
      }
    },

    "/api/contacts": {
      "get": {
        "operationId": "listContacts",
        "summary": "List all contacts",
        "responses": {
          "200": { "description": "Contacts list", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ContactsListResponse" } } } }
        }
      },
      "post": {
        "operationId": "addContact",
        "summary": "Add contact",
        "description": "Add a new contact. Only requires name and email. Notes field is optional for additional information.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ContactCreateRequest" }
            }
          }
        },
        "responses": {
          "200": { "description": "Contact created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ContactCreateResponse" } } } }
        }
      }
    },

    "/api/tasks": {
      "get": {
        "operationId": "listTasks",
        "summary": "List all tasks",
        "responses": {
          "200": { "description": "Tasks list", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TasksListResponse" } } } }
        }
      },
      "post": {
        "operationId": "createTask",
        "summary": "Create task",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaskCreateRequest" }
            }
          }
        },
        "responses": {
          "200": { "description": "Task created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TaskCreateResponse" } } } }
        }
      }
    },

    "/api/tasks/{taskListId}/{taskId}": {
      "patch": {
        "operationId": "updateTask",
        "summary": "Update task",
        "parameters": [
          { "name": "taskListId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "taskId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaskUpdateRequest" }
            }
          }
        },
        "responses": {
          "200": { "description": "Task updated", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TaskUpdateResponse" } } } }
        }
      },
      "delete": {
        "operationId": "deleteTask",
        "summary": "Delete task",
        "parameters": [
          { "name": "taskListId", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "taskId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Task deleted", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TaskDeleteResponse" } } } }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "AuthStatus": {
        "type": "object",
        "properties": {
          "authenticated": { "type": "boolean" },
          "scopes": { "type": "array", "items": { "type": "string" } }
        }
      },

      "SendEmailRequest": {
        "type": "object",
        "required": ["to", "subject", "body"],
        "properties": {
          "to": { "type": "string" },
          "subject": { "type": "string" },
          "body": { "type": "string" },
          "cc": { "type": "string" },
          "bcc": { "type": "string" }
        }
      },
      "EmailSendResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "messageId": { "type": "string" },
          "threadId": { "type": "string" }
        }
      },
      "DraftResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "draftId": { "type": "string" }
        }
      },
      "SearchEmailsResponse": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "threadId": { "type": "string" },
                "snippet": { "type": "string" }
              }
            }
          },
          "nextPageToken": { "type": "string" }
        }
      },
      "EmailData": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "threadId": { "type": "string" },
          "payload": { "type": "object" },
          "snippet": { "type": "string" }
        }
      },
      "ReplyRequest": {
        "type": "object",
        "required": ["body"],
        "properties": { "body": { "type": "string" } }
      },
      "ReplyResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "messageId": { "type": "string" }
        }
      },
      "DeleteEmailResponse": {
        "type": "object",
        "properties": { "success": { "type": "boolean" } }
      },

      "Event": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "summary": { "type": "string" },
          "description": { "type": "string" },
          "location": { "type": "string" },
          "start": { "type": "string", "description": "ISO 8601 datetime" },
          "end": { "type": "string", "description": "ISO 8601 datetime" },
          "attendees": { "type": "array", "items": { "type": "string" } },
          "timeZone": { "type": "string" },
          "htmlLink": { "type": "string" }
        }
      },
      "EventCreateRequest": {
        "type": "object",
        "required": ["summary", "start", "end"],
        "properties": {
          "summary": { "type": "string" },
          "start": { "type": "string", "description": "ISO 8601 datetime" },
          "end": { "type": "string", "description": "ISO 8601 datetime" },
          "description": { "type": "string" },
          "location": { "type": "string" },
          "attendees": { "type": "array", "items": { "type": "string" } },
          "timeZone": { "type": "string" },
          "reminders": { "type": "object" }
        }
      },
      "EventUpdateRequest": {
        "type": "object",
        "properties": {
          "summary": { "type": "string" },
          "start": { "type": "string", "description": "ISO 8601 datetime" },
          "end": { "type": "string", "description": "ISO 8601 datetime" },
          "description": { "type": "string" },
          "location": { "type": "string" },
          "attendees": { "type": "array", "items": { "type": "string" } },
          "timeZone": { "type": "string" },
          "reminders": { "type": "object" }
        }
      },
      "EventCreateResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "eventId": { "type": "string" },
          "htmlLink": { "type": "string" }
        }
      },
      "EventUpdateResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "eventId": { "type": "string" }
        }
      },
      "EventDeleteResponse": {
        "type": "object",
        "properties": { "success": { "type": "boolean" } }
      },
      "EventListResponse": {
        "type": "object",
        "properties": {
          "items": { "type": "array", "items": { "$ref": "#/components/schemas/Event" } },
          "nextPageToken": { "type": "string" }
        }
      },

      "Contact": {
        "type": "object",
        "description": "A contact with name, email, and optional notes",
        "properties": {
          "name": { "type": "string", "description": "Contact's full name" },
          "email": { "type": "string", "description": "Contact's email address" },
          "notes": { "type": "string", "description": "Optional notes about the contact (e.g., 'work', 'personal', 'client')" }
        },
        "required": ["name", "email"]
      },
      "ContactsListResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "count": { "type": "integer" },
          "contacts": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Contact" }
          }
        }
      },
      "ContactCreateRequest": {
        "type": "object",
        "description": "Create a new contact. Only name and email are required. Notes field is optional.",
        "required": ["name", "email"],
        "properties": {
          "name": { "type": "string", "description": "Contact's full name" },
          "email": { "type": "string", "description": "Contact's email address" },
          "notes": { "type": "string", "description": "Optional notes (e.g., 'work', 'personal', 'client')" }
        }
      },
      "ContactCreateResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "contact": { "$ref": "#/components/schemas/Contact" }
        }
      },

      "TasksListResponse": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": { "type": "object", "properties": { "id": { "type": "string" }, "title": { "type": "string" }, "status": { "type": "string" } } }
          }
        }
      },
      "TaskCreateRequest": {
        "type": "object",
        "required": ["title"],
        "properties": { "title": { "type": "string" }, "notes": { "type": "string" }, "due": { "type": "string", "description": "ISO 8601 date or datetime" } }
      },
      "TaskCreateResponse": {
        "type": "object",
        "properties": { "success": { "type": "boolean" }, "taskId": { "type": "string" } }
      },
      "TaskUpdateRequest": {
        "type": "object",
        "properties": { "status": { "type": "string", "enum": ["needsAction", "completed"] } }
      },
      "TaskUpdateResponse": {
        "type": "object",
        "properties": { "success": { "type": "boolean" }, "taskId": { "type": "string" } }
      },
      "TaskDeleteResponse": {
        "type": "object",
        "properties": { "success": { "type": "boolean" } }
      }
    },

    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://mcp1-oauth-server.onrender.com/oauth/authorize",
            "tokenUrl": "https://mcp1-oauth-server.onrender.com/oauth/token",
            "scopes": {
              "gmail": "Access Gmail features",
              "calendar": "Access Calendar features",
              "contacts": "Access Contacts features",
              "tasks": "Access Tasks features"
            }
          }
        }
      }
    }
  },

  "security": [
    { "oauth2": ["gmail", "calendar", "contacts", "tasks"] }
  ]
}
